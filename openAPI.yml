openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Database API
  description: A demonstration of features in OpenAPI specification
servers:
  - url:
paths:
  /users:
    post:
      description: Post a new user in the database.
      operationId: postUser
      requestBody:
        description: The user to create in the database
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "200":
          description: The user has been successfully posted and transmitted in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
  /users/{id}:
    get:
      description: Get a specific user by his ID.
      operationId: getUserByID
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User of the ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    patch:
      description: Patch the info of a specific user by his ID.
      operationId: patchUserByID
      requestBody:
        description: The updated info of the user
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/user"
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
            format: int64"
      responses:
        "204":
          description: The info of the user has been successfully patched.
    delete:
      description: Delete a specific user by his ID.
      operationId: deleteUserByID
      parameters:
        - name: id
          in: path
          description: The ID of the user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: The user has been successfully deleted.
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
      required:
        - id
        - email
        - name
